global
  log 127.0.0.1 local0 err
  maxconn 50000
  uid 99
  gid 99
  #daemon
  nbproc 1
  pidfile haproxy.pid

defaults
  mode http
  log 127.0.0.1 local0 err
  maxconn 50000
  retries 3
  timeout connect 5s
  timeout client 30s
  timeout server 30s
  timeout check 2s

listen admin_stats
  mode http
  bind 0.0.0.0:1080
  #log 127.0.0.1 local0 err
  stats refresh 30s
  stats uri     /haproxy-status
  stats realm   Haproxy\ Statistics
  stats auth    admin:admin
  stats hide-version
  stats admin if TRUE

frontend idu-frontend-http
  bind 0.0.0.0:8069
  mode http

  acl fw_for env(FORWARDFOR) -m bool
  acl force env(FORCEHOST) -m len gt 0
  acl good_host req.hdr(host) -m str "$FORCEHOST"
  acl good_host req.hdr(X-Forwarded-Host) -m str "$FORCEHOST"

  # Standard headers to inform app about inverse proxy status
  http-request set-header X-Forwarded-Host %[req.hdr(host)] if fw_for
  http-request set-header X-Forwarded-For %[src] if fw_for

  # 301 redirection if using wrong host name
  http-request redirect code 301 location //%[env(FORCEHOST)]%[capture.req.uri] if force !good_host

  # Send to right backend
  http-request set-var(req.path) path
  acl longpolling_url var(req.path) -m dir /longpolling
  use_backend idu_backend_longpolling if longpolling_url
  default_backend idu_backend_odoo

backend idu_backend_odoo
  mode http
  balance source
  server idu-fk-a 192.168.200.4:8069 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3
  server idu-fk-b 192.168.200.5:8069 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3
  server idu-fk-app 192.168.200.6:8069 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3

backend idu_backend_longpolling
  mode http
  balance source
  server idu-fk-a 192.168.200.4:8072 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3
  server idu-fk-b 192.168.200.5:8072 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3
  server idu-fk-app 192.168.200.6:8072 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3

#cat >/etc/haproxy/haproxy.cfg<<EOF 
#EOF