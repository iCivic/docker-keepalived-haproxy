# vim:set ft=dockerfile:
FROM alpine:3.10

ENV HAPROXY_VERSION 2.0.6
ENV HAPROXY_URL https://www.haproxy.org/download/2.0/src/haproxy-2.0.6.tar.gz
ENV HAPROXY_SHA256 01e1da09452010111107ca1b3a8b7f1927731ba0fe4380bacae1c626fdc521e4

# see https://sources.debian.net/src/haproxy/jessie/debian/rules/ for some helpful navigation of the possible "make" arguments
RUN echo 'http://mirrors.ustc.edu.cn/alpine/v3.10/main' > /etc/apk/repositories \
    && echo 'http://mirrors.ustc.edu.cn/alpine/v3.10/community' >>/etc/apk/repositories \
    && apk add -U tzdata \
    && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo "Asia/Shanghai" > /etc/timezone \
    && apk del tzdata \
    && set -x \
	\
	&& apk add --no-cache --virtual .build-deps \
		ca-certificates \
		gcc \
		libc-dev \
		linux-headers \
		lua5.3-dev \
		make \
		openssl \
		openssl-dev \
		pcre2-dev \
		readline-dev \
		tar \
		zlib-dev \
	\
	&& wget -O haproxy.tar.gz "$HAPROXY_URL" \
	&& echo "$HAPROXY_SHA256 *haproxy.tar.gz" | sha256sum -c \
	&& mkdir -p /usr/src/haproxy \
	&& tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1 \
	&& rm haproxy.tar.gz \
	\
	&& makeOpts=' \
		TARGET=linux-glibc \
		USE_GETADDRINFO=1 \
		USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3 \
		USE_OPENSSL=1 \
		USE_PCRE2=1 USE_PCRE2_JIT=1 \
		USE_ZLIB=1 \
		\
		EXTRA_OBJS=" \
# see https://github.com/docker-library/haproxy/issues/94#issuecomment-505673353 for more details about prometheus support
			contrib/prometheus-exporter/service-prometheus.o \
		" \
	' \
	&& nproc="$(getconf _NPROCESSORS_ONLN)" \
	&& eval "make -C /usr/src/haproxy -j '$nproc' all $makeOpts" \
	&& eval "make -C /usr/src/haproxy install-bin $makeOpts" \
	\
	&& mkdir -p /usr/local/etc/haproxy \
	&& cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors \
	&& rm -rf /usr/src/haproxy \
	\
	&& runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)" \
	&& apk add --no-network --virtual .haproxy-rundeps $runDeps \
	&& apk del --no-network .build-deps

# https://www.haproxy.org/download/1.8/doc/management.txt
# "4. Stopping and restarting HAProxy"
# "when the SIGTERM signal is sent to the haproxy process, it immediately quits and all established connections are closed"
# "graceful stop is triggered when the SIGUSR1 signal is sent to the haproxy process"
STOPSIGNAL SIGUSR1

#COPY docker-entrypoint.sh /
#RUN chmod +x /docker-entrypoint.sh

#ENTRYPOINT ["/docker-entrypoint.sh"]
#CMD ["haproxy", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]

COPY ./tmp /tmp
COPY start.sh /
COPY script/locale.md /
COPY script/rsyslog.conf /etc/rsyslog.d/
COPY script/chk_haproxy.sh /usr/local/bin/ 

RUN apk add wget gcc libc-dev libnl-dev openssl openssl-dev libnfnetlink-dev make linux-headers rsyslog \
# install keepalived
#   && wget -O /tmp/keepalived.tar.gz "http://www.keepalived.org/software/keepalived-${KEEPALIVED_VERSION}.tar.gz" \
    && mkdir -p /tmp/keepalived \
	&& tar -xf /tmp/keepalived-2.0.18.tar.gz -C /tmp/keepalived --strip-components 1 \
    && cd /tmp/keepalived \
	&& ./configure \
	&& make \
	&& make install \
# add locale: https://github.com/gliderlabs/docker-alpine/issues/144#issuecomment-339906345
    && apk --no-cache add ca-certificates wget \
    && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
#   && wget -q -P /tmp https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-2.30-r0.apk \
#   && wget -q -P /tmp https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-bin-2.30-r0.apk \
#   && wget -q -P /tmp https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-i18n-2.30-r0.apk \
    && apk add /tmp/glibc-2.30-r0.apk /tmp/glibc-bin-2.30-r0.apk /tmp/glibc-i18n-2.30-r0.apk \
    && cat /locale.md | xargs -i /usr/glibc-compat/bin/localedef -i {} -f UTF-8 {}.UTF-8 \
# rsyslog, refer to: https://github.com/mminks/haproxy-docker-logging/blob/master/Dockerfile
    && mkdir -p /etc/rsyslog.d \
	&& touch /var/log/haproxy.log \
    && cd /tmp && rm -rf /tmp/* \
    && chmod +x /start.sh

ENTRYPOINT []
CMD ["/start.sh"]

## ****************************** 参考资料 *****************************************
## 制作Docker Image: docker build -t idu/keepalived-haproxy:2.0.6-alpine .
## docker exec -u root -it idu-fk-haproxy /bin/sh
## docker cp ./ idu-fk-haproxy:tmp/
## docker exec -u root -it idu-fk-haproxy /bin/sh

